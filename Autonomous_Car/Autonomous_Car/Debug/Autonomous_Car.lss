
Autonomous_Car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000928  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000099c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00800060  00800060  0000099c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000a08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001547  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000819  00000000  00000000  0000203f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a06  00000000  00000000  00002858  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  00003260  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000576  00000000  00000000  00003448  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000954  00000000  00000000  000039be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004312  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 8f 02 	jmp	0x51e	; 0x51e <__vector_2>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 0a 03 	jmp	0x614	; 0x614 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a5 37       	cpi	r26, 0x75	; 117
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 8e 01 	call	0x31c	; 0x31c <main>
  74:	0c 94 92 04 	jmp	0x924	; 0x924 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_voidSetPinDirection>:
				case	PORT_D	:	Local_Val	=	GET_BIT(PIND_REG,PINID);	break;
			}	
	}
	else{	/*		Do Nothing		*/	}	
	return Local_Val;
}
  7c:	84 30       	cpi	r24, 0x04	; 4
  7e:	08 f0       	brcs	.+2      	; 0x82 <DIO_voidSetPinDirection+0x6>
  80:	72 c0       	rjmp	.+228    	; 0x166 <DIO_voidSetPinDirection+0xea>
  82:	68 30       	cpi	r22, 0x08	; 8
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_voidSetPinDirection+0xc>
  86:	6f c0       	rjmp	.+222    	; 0x166 <DIO_voidSetPinDirection+0xea>
  88:	41 30       	cpi	r20, 0x01	; 1
  8a:	a1 f5       	brne	.+104    	; 0xf4 <DIO_voidSetPinDirection+0x78>
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	89 f0       	breq	.+34     	; 0xb2 <DIO_voidSetPinDirection+0x36>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_voidSetPinDirection+0x20>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	c9 f0       	breq	.+50     	; 0xc8 <DIO_voidSetPinDirection+0x4c>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	11 f1       	breq	.+68     	; 0xde <DIO_voidSetPinDirection+0x62>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_voidSetPinDirection+0x2c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_voidSetPinDirection+0x28>
  ac:	82 2b       	or	r24, r18
  ae:	8a bb       	out	0x1a, r24	; 26
  b0:	08 95       	ret
  b2:	27 b3       	in	r18, 0x17	; 23
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_voidSetPinDirection+0x42>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_voidSetPinDirection+0x3e>
  c2:	82 2b       	or	r24, r18
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	08 95       	ret
  c8:	24 b3       	in	r18, 0x14	; 20
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_voidSetPinDirection+0x58>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_voidSetPinDirection+0x54>
  d8:	82 2b       	or	r24, r18
  da:	84 bb       	out	0x14, r24	; 20
  dc:	08 95       	ret
  de:	21 b3       	in	r18, 0x11	; 17
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_voidSetPinDirection+0x6e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_voidSetPinDirection+0x6a>
  ee:	82 2b       	or	r24, r18
  f0:	81 bb       	out	0x11, r24	; 17
  f2:	08 95       	ret
  f4:	41 11       	cpse	r20, r1
  f6:	37 c0       	rjmp	.+110    	; 0x166 <DIO_voidSetPinDirection+0xea>
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	91 f0       	breq	.+36     	; 0x120 <DIO_voidSetPinDirection+0xa4>
  fc:	28 f0       	brcs	.+10     	; 0x108 <DIO_voidSetPinDirection+0x8c>
  fe:	82 30       	cpi	r24, 0x02	; 2
 100:	d9 f0       	breq	.+54     	; 0x138 <DIO_voidSetPinDirection+0xbc>
 102:	83 30       	cpi	r24, 0x03	; 3
 104:	29 f1       	breq	.+74     	; 0x150 <DIO_voidSetPinDirection+0xd4>
 106:	08 95       	ret
 108:	2a b3       	in	r18, 0x1a	; 26
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_voidSetPinDirection+0x98>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_voidSetPinDirection+0x94>
 118:	80 95       	com	r24
 11a:	82 23       	and	r24, r18
 11c:	8a bb       	out	0x1a, r24	; 26
 11e:	08 95       	ret
 120:	27 b3       	in	r18, 0x17	; 23
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_voidSetPinDirection+0xb0>
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	6a 95       	dec	r22
 12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_voidSetPinDirection+0xac>
 130:	80 95       	com	r24
 132:	82 23       	and	r24, r18
 134:	87 bb       	out	0x17, r24	; 23
 136:	08 95       	ret
 138:	24 b3       	in	r18, 0x14	; 20
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_voidSetPinDirection+0xc8>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_voidSetPinDirection+0xc4>
 148:	80 95       	com	r24
 14a:	82 23       	and	r24, r18
 14c:	84 bb       	out	0x14, r24	; 20
 14e:	08 95       	ret
 150:	21 b3       	in	r18, 0x11	; 17
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <DIO_voidSetPinDirection+0xe0>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <DIO_voidSetPinDirection+0xdc>
 160:	80 95       	com	r24
 162:	82 23       	and	r24, r18
 164:	81 bb       	out	0x11, r24	; 17
 166:	08 95       	ret

00000168 <DIO_voidSetPinValue>:
 168:	84 30       	cpi	r24, 0x04	; 4
 16a:	08 f0       	brcs	.+2      	; 0x16e <DIO_voidSetPinValue+0x6>
 16c:	72 c0       	rjmp	.+228    	; 0x252 <DIO_voidSetPinValue+0xea>
 16e:	68 30       	cpi	r22, 0x08	; 8
 170:	08 f0       	brcs	.+2      	; 0x174 <DIO_voidSetPinValue+0xc>
 172:	6f c0       	rjmp	.+222    	; 0x252 <DIO_voidSetPinValue+0xea>
 174:	41 30       	cpi	r20, 0x01	; 1
 176:	a1 f5       	brne	.+104    	; 0x1e0 <DIO_voidSetPinValue+0x78>
 178:	81 30       	cpi	r24, 0x01	; 1
 17a:	89 f0       	breq	.+34     	; 0x19e <DIO_voidSetPinValue+0x36>
 17c:	28 f0       	brcs	.+10     	; 0x188 <DIO_voidSetPinValue+0x20>
 17e:	82 30       	cpi	r24, 0x02	; 2
 180:	c9 f0       	breq	.+50     	; 0x1b4 <DIO_voidSetPinValue+0x4c>
 182:	83 30       	cpi	r24, 0x03	; 3
 184:	11 f1       	breq	.+68     	; 0x1ca <DIO_voidSetPinValue+0x62>
 186:	08 95       	ret
 188:	2b b3       	in	r18, 0x1b	; 27
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_voidSetPinValue+0x2c>
 190:	88 0f       	add	r24, r24
 192:	99 1f       	adc	r25, r25
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_voidSetPinValue+0x28>
 198:	82 2b       	or	r24, r18
 19a:	8b bb       	out	0x1b, r24	; 27
 19c:	08 95       	ret
 19e:	28 b3       	in	r18, 0x18	; 24
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_voidSetPinValue+0x42>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_voidSetPinValue+0x3e>
 1ae:	82 2b       	or	r24, r18
 1b0:	88 bb       	out	0x18, r24	; 24
 1b2:	08 95       	ret
 1b4:	25 b3       	in	r18, 0x15	; 21
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_voidSetPinValue+0x58>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	6a 95       	dec	r22
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_voidSetPinValue+0x54>
 1c4:	82 2b       	or	r24, r18
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	08 95       	ret
 1ca:	22 b3       	in	r18, 0x12	; 18
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_voidSetPinValue+0x6e>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_voidSetPinValue+0x6a>
 1da:	82 2b       	or	r24, r18
 1dc:	82 bb       	out	0x12, r24	; 18
 1de:	08 95       	ret
 1e0:	41 11       	cpse	r20, r1
 1e2:	37 c0       	rjmp	.+110    	; 0x252 <DIO_voidSetPinValue+0xea>
 1e4:	81 30       	cpi	r24, 0x01	; 1
 1e6:	91 f0       	breq	.+36     	; 0x20c <DIO_voidSetPinValue+0xa4>
 1e8:	28 f0       	brcs	.+10     	; 0x1f4 <DIO_voidSetPinValue+0x8c>
 1ea:	82 30       	cpi	r24, 0x02	; 2
 1ec:	d9 f0       	breq	.+54     	; 0x224 <DIO_voidSetPinValue+0xbc>
 1ee:	83 30       	cpi	r24, 0x03	; 3
 1f0:	29 f1       	breq	.+74     	; 0x23c <DIO_voidSetPinValue+0xd4>
 1f2:	08 95       	ret
 1f4:	2b b3       	in	r18, 0x1b	; 27
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_voidSetPinValue+0x98>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_voidSetPinValue+0x94>
 204:	80 95       	com	r24
 206:	82 23       	and	r24, r18
 208:	8b bb       	out	0x1b, r24	; 27
 20a:	08 95       	ret
 20c:	28 b3       	in	r18, 0x18	; 24
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_voidSetPinValue+0xb0>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	6a 95       	dec	r22
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_voidSetPinValue+0xac>
 21c:	80 95       	com	r24
 21e:	82 23       	and	r24, r18
 220:	88 bb       	out	0x18, r24	; 24
 222:	08 95       	ret
 224:	25 b3       	in	r18, 0x15	; 21
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <DIO_voidSetPinValue+0xc8>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	6a 95       	dec	r22
 232:	e2 f7       	brpl	.-8      	; 0x22c <DIO_voidSetPinValue+0xc4>
 234:	80 95       	com	r24
 236:	82 23       	and	r24, r18
 238:	85 bb       	out	0x15, r24	; 21
 23a:	08 95       	ret
 23c:	22 b3       	in	r18, 0x12	; 18
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_voidSetPinValue+0xe0>
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_voidSetPinValue+0xdc>
 24c:	80 95       	com	r24
 24e:	82 23       	and	r24, r18
 250:	82 bb       	out	0x12, r24	; 18
 252:	08 95       	ret

00000254 <DIO_voidSetPortDirection>:
/*			DIO_voidSetPortDirection(PORTB , 0x0F)		0b0000 1111;	*/
/*			DIO_voidSetPortDirection(PORTB , OUTPUT)		0b1111 1111;*/
void	DIO_voidSetPortDirection(u8 PORTID , u8 Direction)
{
	/*				Range Check										*/
	if(  PORTID < 4  )
 254:	84 30       	cpi	r24, 0x04	; 4
 256:	b8 f5       	brcc	.+110    	; 0x2c6 <DIO_voidSetPortDirection+0x72>
	{
		if( Direction == OUTPUT )
 258:	61 30       	cpi	r22, 0x01	; 1
 25a:	a1 f4       	brne	.+40     	; 0x284 <DIO_voidSetPortDirection+0x30>
		{
			switch(PORTID)
 25c:	81 30       	cpi	r24, 0x01	; 1
 25e:	49 f0       	breq	.+18     	; 0x272 <DIO_voidSetPortDirection+0x1e>
 260:	28 f0       	brcs	.+10     	; 0x26c <DIO_voidSetPortDirection+0x18>
 262:	82 30       	cpi	r24, 0x02	; 2
 264:	49 f0       	breq	.+18     	; 0x278 <DIO_voidSetPortDirection+0x24>
 266:	83 30       	cpi	r24, 0x03	; 3
 268:	51 f0       	breq	.+20     	; 0x27e <DIO_voidSetPortDirection+0x2a>
 26a:	08 95       	ret
			{
				case	PORT_A	:	DDRA_REG	=	0xFF;	break;
 26c:	8f ef       	ldi	r24, 0xFF	; 255
 26e:	8a bb       	out	0x1a, r24	; 26
 270:	08 95       	ret
				case	PORT_B	:	DDRB_REG	=	0xFF;	break;
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	87 bb       	out	0x17, r24	; 23
 276:	08 95       	ret
				case	PORT_C	:	DDRC_REG	=	0xFF;	break;
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	84 bb       	out	0x14, r24	; 20
 27c:	08 95       	ret
				case	PORT_D	:	DDRD_REG	=	0xFF;	break;
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	81 bb       	out	0x11, r24	; 17
 282:	08 95       	ret
			}
		}
		else if(Direction == INPUT)
 284:	61 11       	cpse	r22, r1
 286:	10 c0       	rjmp	.+32     	; 0x2a8 <DIO_voidSetPortDirection+0x54>
		{
			switch(PORTID)
 288:	81 30       	cpi	r24, 0x01	; 1
 28a:	41 f0       	breq	.+16     	; 0x29c <DIO_voidSetPortDirection+0x48>
 28c:	28 f0       	brcs	.+10     	; 0x298 <DIO_voidSetPortDirection+0x44>
 28e:	82 30       	cpi	r24, 0x02	; 2
 290:	39 f0       	breq	.+14     	; 0x2a0 <DIO_voidSetPortDirection+0x4c>
 292:	83 30       	cpi	r24, 0x03	; 3
 294:	39 f0       	breq	.+14     	; 0x2a4 <DIO_voidSetPortDirection+0x50>
 296:	08 95       	ret
			{
				case	PORT_A	:	DDRA_REG	=	0x00;	break;
 298:	1a ba       	out	0x1a, r1	; 26
 29a:	08 95       	ret
				case	PORT_B	:	DDRB_REG	=	0x00;	break;
 29c:	17 ba       	out	0x17, r1	; 23
 29e:	08 95       	ret
				case	PORT_C	:	DDRC_REG	=	0x00;	break;
 2a0:	14 ba       	out	0x14, r1	; 20
 2a2:	08 95       	ret
				case	PORT_D	:	DDRD_REG	=	0x00;	break;
 2a4:	11 ba       	out	0x11, r1	; 17
 2a6:	08 95       	ret
			}			
		}
		else
		{
			switch(PORTID)
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	41 f0       	breq	.+16     	; 0x2bc <DIO_voidSetPortDirection+0x68>
 2ac:	28 f0       	brcs	.+10     	; 0x2b8 <DIO_voidSetPortDirection+0x64>
 2ae:	82 30       	cpi	r24, 0x02	; 2
 2b0:	39 f0       	breq	.+14     	; 0x2c0 <DIO_voidSetPortDirection+0x6c>
 2b2:	83 30       	cpi	r24, 0x03	; 3
 2b4:	39 f0       	breq	.+14     	; 0x2c4 <DIO_voidSetPortDirection+0x70>
 2b6:	08 95       	ret
			{
				case	PORT_A	:	DDRA_REG	=	Direction;	break;
 2b8:	6a bb       	out	0x1a, r22	; 26
 2ba:	08 95       	ret
				case	PORT_B	:	DDRB_REG	=	Direction;	break;
 2bc:	67 bb       	out	0x17, r22	; 23
 2be:	08 95       	ret
				case	PORT_C	:	DDRC_REG	=	Direction;	break;
 2c0:	64 bb       	out	0x14, r22	; 20
 2c2:	08 95       	ret
				case	PORT_D	:	DDRD_REG	=	Direction;	break;
 2c4:	61 bb       	out	0x11, r22	; 17
 2c6:	08 95       	ret

000002c8 <LooKRight>:
long MidDistance =0;
long LeftDistance =0;

void LooKRight()
{			
	      OCR1A=97;   //0 degree
 2c8:	81 e6       	ldi	r24, 0x61	; 97
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	9b bd       	out	0x2b, r25	; 43
 2ce:	8a bd       	out	0x2a, r24	; 42
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d0:	2f ef       	ldi	r18, 0xFF	; 255
 2d2:	83 ed       	ldi	r24, 0xD3	; 211
 2d4:	90 e3       	ldi	r25, 0x30	; 48
 2d6:	21 50       	subi	r18, 0x01	; 1
 2d8:	80 40       	sbci	r24, 0x00	; 0
 2da:	90 40       	sbci	r25, 0x00	; 0
 2dc:	e1 f7       	brne	.-8      	; 0x2d6 <LooKRight+0xe>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <LooKRight+0x18>
 2e0:	00 00       	nop
 2e2:	08 95       	ret

000002e4 <LookLeft>:
		  _delay_ms(1000);
}
void LookLeft() 
{
		  OCR1A=570;  //180 degree
 2e4:	8a e3       	ldi	r24, 0x3A	; 58
 2e6:	92 e0       	ldi	r25, 0x02	; 2
 2e8:	9b bd       	out	0x2b, r25	; 43
 2ea:	8a bd       	out	0x2a, r24	; 42
 2ec:	2f ef       	ldi	r18, 0xFF	; 255
 2ee:	83 ed       	ldi	r24, 0xD3	; 211
 2f0:	90 e3       	ldi	r25, 0x30	; 48
 2f2:	21 50       	subi	r18, 0x01	; 1
 2f4:	80 40       	sbci	r24, 0x00	; 0
 2f6:	90 40       	sbci	r25, 0x00	; 0
 2f8:	e1 f7       	brne	.-8      	; 0x2f2 <LookLeft+0xe>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <LookLeft+0x18>
 2fc:	00 00       	nop
 2fe:	08 95       	ret

00000300 <LookForward>:
		  _delay_ms(1000);
}

void LookForward()
{
	      OCR1A=350;  //90 degree
 300:	8e e5       	ldi	r24, 0x5E	; 94
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	9b bd       	out	0x2b, r25	; 43
 306:	8a bd       	out	0x2a, r24	; 42
 308:	2f ef       	ldi	r18, 0xFF	; 255
 30a:	83 ed       	ldi	r24, 0xD3	; 211
 30c:	90 e3       	ldi	r25, 0x30	; 48
 30e:	21 50       	subi	r18, 0x01	; 1
 310:	80 40       	sbci	r24, 0x00	; 0
 312:	90 40       	sbci	r25, 0x00	; 0
 314:	e1 f7       	brne	.-8      	; 0x30e <LookForward+0xe>
 316:	00 c0       	rjmp	.+0      	; 0x318 <LookForward+0x18>
 318:	00 00       	nop
 31a:	08 95       	ret

0000031c <main>:
	      _delay_ms(1000);
}

int main(void)
{		
	TIMSK |= (1 << TOIE0);  // enable timer interrupt
 31c:	89 b7       	in	r24, 0x39	; 57
 31e:	81 60       	ori	r24, 0x01	; 1
 320:	89 bf       	out	0x39, r24	; 57
DIO_voidSetPortDirection(PORT_A,OUTPUT);
 322:	61 e0       	ldi	r22, 0x01	; 1
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
DIO_voidSetPortDirection(PORT_B,OUTPUT);
 32a:	61 e0       	ldi	r22, 0x01	; 1
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>

	ultrasonic_init(); 
 332:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ultrasonic_init>
	sei(); 
 336:	78 94       	sei
	 
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);        //NON Inverted PWM
 338:	8f b5       	in	r24, 0x2f	; 47
 33a:	82 6a       	ori	r24, 0xA2	; 162
 33c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64 MODE 14(FAST PWM)
 33e:	8e b5       	in	r24, 0x2e	; 46
 340:	8b 61       	ori	r24, 0x1B	; 27
 342:	8e bd       	out	0x2e, r24	; 46
	ICR1=4999;  //fPWM=50Hz (Period = 20ms Standard).
 344:	87 e8       	ldi	r24, 0x87	; 135
 346:	93 e1       	ldi	r25, 0x13	; 19
 348:	97 bd       	out	0x27, r25	; 39
 34a:	86 bd       	out	0x26, r24	; 38
	DDRD|=(1<<PD4)|(1<<PD5);   //PWM Pins as Out*/
 34c:	81 b3       	in	r24, 0x11	; 17
 34e:	80 63       	ori	r24, 0x30	; 48
 350:	81 bb       	out	0x11, r24	; 17

	 while(1)
	 {
		LookForward();
 352:	0e 94 80 01 	call	0x300	; 0x300 <LookForward>
		UltraSonic_Trigger(); 
 356:	0e 94 74 02 	call	0x4e8	; 0x4e8 <UltraSonic_Trigger>
		MidDistance = ReturnDistance(); 
 35a:	0e 94 25 03 	call	0x64a	; 0x64a <ReturnDistance>
 35e:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <MidDistance>
 362:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <MidDistance+0x1>
 366:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <MidDistance+0x2>
 36a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <MidDistance+0x3>
		if (MidDistance > 20)
 36e:	65 31       	cpi	r22, 0x15	; 21
 370:	71 05       	cpc	r23, r1
 372:	81 05       	cpc	r24, r1
 374:	91 05       	cpc	r25, r1
 376:	1c f0       	brlt	.+6      	; 0x37e <main+0x62>
		{
			CarMovingForward();
 378:	0e 94 2e 03 	call	0x65c	; 0x65c <CarMovingForward>
 37c:	ea cf       	rjmp	.-44     	; 0x352 <main+0x36>
		} 
		else 
		{ 
			CarMovingBackward();
 37e:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <CarMovingBackward>
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	89 e6       	ldi	r24, 0x69	; 105
 386:	98 e1       	ldi	r25, 0x18	; 24
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	90 40       	sbci	r25, 0x00	; 0
 38e:	e1 f7       	brne	.-8      	; 0x388 <main+0x6c>
 390:	00 c0       	rjmp	.+0      	; 0x392 <main+0x76>
 392:	00 00       	nop
			_delay_ms(500);
			StopCar(); 
 394:	0e 94 d5 03 	call	0x7aa	; 0x7aa <StopCar>
			LooKRight(); 
 398:	0e 94 64 01 	call	0x2c8	; 0x2c8 <LooKRight>
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	80 e7       	ldi	r24, 0x70	; 112
 3a0:	92 e0       	ldi	r25, 0x02	; 2
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <main+0x86>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <main+0x90>
 3ac:	00 00       	nop
			_delay_ms(50);
			UltraSonic_Trigger();
 3ae:	0e 94 74 02 	call	0x4e8	; 0x4e8 <UltraSonic_Trigger>
 3b2:	2f ef       	ldi	r18, 0xFF	; 255
 3b4:	81 ee       	ldi	r24, 0xE1	; 225
 3b6:	94 e0       	ldi	r25, 0x04	; 4
 3b8:	21 50       	subi	r18, 0x01	; 1
 3ba:	80 40       	sbci	r24, 0x00	; 0
 3bc:	90 40       	sbci	r25, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <main+0x9c>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <main+0xa6>
 3c2:	00 00       	nop
			_delay_ms(100); 
			RightDistance = ReturnDistance(); 
 3c4:	0e 94 25 03 	call	0x64a	; 0x64a <ReturnDistance>
 3c8:	60 93 68 00 	sts	0x0068, r22	; 0x800068 <RightDistance>
 3cc:	70 93 69 00 	sts	0x0069, r23	; 0x800069 <RightDistance+0x1>
 3d0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <RightDistance+0x2>
 3d4:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <RightDistance+0x3>
 3d8:	2f ef       	ldi	r18, 0xFF	; 255
 3da:	81 ee       	ldi	r24, 0xE1	; 225
 3dc:	94 e0       	ldi	r25, 0x04	; 4
 3de:	21 50       	subi	r18, 0x01	; 1
 3e0:	80 40       	sbci	r24, 0x00	; 0
 3e2:	90 40       	sbci	r25, 0x00	; 0
 3e4:	e1 f7       	brne	.-8      	; 0x3de <main+0xc2>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <main+0xcc>
 3e8:	00 00       	nop
			_delay_ms(100); 
			LookLeft();
 3ea:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LookLeft>
 3ee:	2f ef       	ldi	r18, 0xFF	; 255
 3f0:	80 e7       	ldi	r24, 0x70	; 112
 3f2:	92 e0       	ldi	r25, 0x02	; 2
 3f4:	21 50       	subi	r18, 0x01	; 1
 3f6:	80 40       	sbci	r24, 0x00	; 0
 3f8:	90 40       	sbci	r25, 0x00	; 0
 3fa:	e1 f7       	brne	.-8      	; 0x3f4 <main+0xd8>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <main+0xe2>
 3fe:	00 00       	nop
			_delay_ms(50); 
			UltraSonic_Trigger();
 400:	0e 94 74 02 	call	0x4e8	; 0x4e8 <UltraSonic_Trigger>
 404:	2f ef       	ldi	r18, 0xFF	; 255
 406:	81 ee       	ldi	r24, 0xE1	; 225
 408:	94 e0       	ldi	r25, 0x04	; 4
 40a:	21 50       	subi	r18, 0x01	; 1
 40c:	80 40       	sbci	r24, 0x00	; 0
 40e:	90 40       	sbci	r25, 0x00	; 0
 410:	e1 f7       	brne	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 412:	00 c0       	rjmp	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 414:	00 00       	nop
			_delay_ms(100); 
			LeftDistance = ReturnDistance();
 416:	0e 94 25 03 	call	0x64a	; 0x64a <ReturnDistance>
 41a:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 41e:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 422:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 426:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
			LookForward();
 42a:	0e 94 80 01 	call	0x300	; 0x300 <LookForward>
			
			if (LeftDistance > 20 || RightDistance > 20 )
 42e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 432:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 436:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 43a:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 43e:	85 31       	cpi	r24, 0x15	; 21
 440:	91 05       	cpc	r25, r1
 442:	a1 05       	cpc	r26, r1
 444:	b1 05       	cpc	r27, r1
 446:	74 f4       	brge	.+28     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 448:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <RightDistance>
 44c:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <RightDistance+0x1>
 450:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <RightDistance+0x2>
 454:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <RightDistance+0x3>
 458:	45 31       	cpi	r20, 0x15	; 21
 45a:	51 05       	cpc	r21, r1
 45c:	61 05       	cpc	r22, r1
 45e:	71 05       	cpc	r23, r1
 460:	0c f4       	brge	.+2      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 462:	77 cf       	rjmp	.-274    	; 0x352 <main+0x36>
			{
				if (LeftDistance > RightDistance)
 464:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <RightDistance>
 468:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <RightDistance+0x1>
 46c:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <RightDistance+0x2>
 470:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <RightDistance+0x3>
 474:	48 17       	cp	r20, r24
 476:	59 07       	cpc	r21, r25
 478:	6a 07       	cpc	r22, r26
 47a:	7b 07       	cpc	r23, r27
 47c:	74 f4       	brge	.+28     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
				{
					TurnLeft(); 
 47e:	0e 94 73 03 	call	0x6e6	; 0x6e6 <TurnLeft>
 482:	2f ef       	ldi	r18, 0xFF	; 255
 484:	8f e0       	ldi	r24, 0x0F	; 15
 486:	97 e2       	ldi	r25, 0x27	; 39
 488:	21 50       	subi	r18, 0x01	; 1
 48a:	80 40       	sbci	r24, 0x00	; 0
 48c:	90 40       	sbci	r25, 0x00	; 0
 48e:	e1 f7       	brne	.-8      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 492:	00 00       	nop
					_delay_ms(800);
					StopCar(); 
 494:	0e 94 d5 03 	call	0x7aa	; 0x7aa <StopCar>
 498:	5c cf       	rjmp	.-328    	; 0x352 <main+0x36>
				} 
				else
				{
					TurnRight();
 49a:	0e 94 a4 03 	call	0x748	; 0x748 <TurnRight>
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	8f e0       	ldi	r24, 0x0F	; 15
 4a2:	97 e2       	ldi	r25, 0x27	; 39
 4a4:	21 50       	subi	r18, 0x01	; 1
 4a6:	80 40       	sbci	r24, 0x00	; 0
 4a8:	90 40       	sbci	r25, 0x00	; 0
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4ae:	00 00       	nop
					_delay_ms(800);
					StopCar();
 4b0:	0e 94 d5 03 	call	0x7aa	; 0x7aa <StopCar>
 4b4:	4e cf       	rjmp	.-356    	; 0x352 <main+0x36>

000004b6 <enable_ex_interrupt>:
  enable_ex_interrupt();
}

void enable_ex_interrupt(void){

    MCUCR |= (0 << ISC11) | (1 << ISC10); // enable interrupt on any(rising/dropping) edge
 4b6:	85 b7       	in	r24, 0x35	; 53
 4b8:	84 60       	ori	r24, 0x04	; 4
 4ba:	85 bf       	out	0x35, r24	; 53
    GICR |= (1 << INT1);  //Turns on INT1
 4bc:	8b b7       	in	r24, 0x3b	; 59
 4be:	80 68       	ori	r24, 0x80	; 128
 4c0:	8b bf       	out	0x3b, r24	; 59
 4c2:	08 95       	ret

000004c4 <ultrasonic_init>:
int turn = 0;


void ultrasonic_init(void){

  DIO_voidSetPinDirection(PORT_D,PIN0,OUTPUT);
 4c4:	41 e0       	ldi	r20, 0x01	; 1
 4c6:	60 e0       	ldi	r22, 0x00	; 0
 4c8:	83 e0       	ldi	r24, 0x03	; 3
 4ca:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_voidSetPinDirection>
  DIO_voidSetPinDirection(PORT_D,PIN3,INPUT);
 4ce:	40 e0       	ldi	r20, 0x00	; 0
 4d0:	63 e0       	ldi	r22, 0x03	; 3
 4d2:	83 e0       	ldi	r24, 0x03	; 3
 4d4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_voidSetPinDirection>
  DIO_voidSetPinValue(PORT_D,PIN3,HIGH);
 4d8:	41 e0       	ldi	r20, 0x01	; 1
 4da:	63 e0       	ldi	r22, 0x03	; 3
 4dc:	83 e0       	ldi	r24, 0x03	; 3
 4de:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
  enable_ex_interrupt();
 4e2:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <enable_ex_interrupt>
 4e6:	08 95       	ret

000004e8 <UltraSonic_Trigger>:
    GICR |= (1 << INT1);  //Turns on INT1
}

void UltraSonic_Trigger(void){

  if(running == 0){
 4e8:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <running>
 4ec:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <running+0x1>
 4f0:	89 2b       	or	r24, r25
 4f2:	a1 f4       	brne	.+40     	; 0x51c <UltraSonic_Trigger+0x34>
    DIO_voidSetPinValue(PORT_D,PIN0,HIGH);
 4f4:	41 e0       	ldi	r20, 0x01	; 1
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	83 e0       	ldi	r24, 0x03	; 3
 4fa:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4fe:	85 e3       	ldi	r24, 0x35	; 53
 500:	8a 95       	dec	r24
 502:	f1 f7       	brne	.-4      	; 0x500 <UltraSonic_Trigger+0x18>
 504:	00 00       	nop
    _delay_us(10);
	DIO_voidSetPinValue(PORT_D,PIN0,LOW);
 506:	40 e0       	ldi	r20, 0x00	; 0
 508:	60 e0       	ldi	r22, 0x00	; 0
 50a:	83 e0       	ldi	r24, 0x03	; 3
 50c:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
    running=1;
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <running+0x1>
 518:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <running>
 51c:	08 95       	ret

0000051e <__vector_2>:
  }
}

SIGNAL(INT1_vect){
 51e:	1f 92       	push	r1
 520:	0f 92       	push	r0
 522:	0f b6       	in	r0, 0x3f	; 63
 524:	0f 92       	push	r0
 526:	11 24       	eor	r1, r1
 528:	2f 93       	push	r18
 52a:	3f 93       	push	r19
 52c:	4f 93       	push	r20
 52e:	5f 93       	push	r21
 530:	6f 93       	push	r22
 532:	7f 93       	push	r23
 534:	8f 93       	push	r24
 536:	9f 93       	push	r25
 538:	af 93       	push	r26
 53a:	bf 93       	push	r27
 53c:	ef 93       	push	r30
 53e:	ff 93       	push	r31
	if(running){ //accept interrupts only when sonar was started
 540:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <running>
 544:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <running+0x1>
 548:	89 2b       	or	r24, r25
 54a:	09 f4       	brne	.+2      	; 0x54e <__vector_2+0x30>
 54c:	52 c0       	rjmp	.+164    	; 0x5f2 <__vector_2+0xd4>
		if (up == 0) { // voltage rise, start time measurement
 54e:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <up>
 552:	81 11       	cpse	r24, r1
 554:	0c c0       	rjmp	.+24     	; 0x56e <__vector_2+0x50>
			up = 1;
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <up>
			timercounter = 0;
 55c:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <timercounter+0x1>
 560:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <timercounter>
			TCCR0 |= (0 << CS02)|(0 << CS01)|(1 << CS00); // Start/initialize timer with pre-scalar 1
 564:	83 b7       	in	r24, 0x33	; 51
 566:	81 60       	ori	r24, 0x01	; 1
 568:	83 bf       	out	0x33, r24	; 51
			TCNT0 = 0; // Initialize Counter
 56a:	12 be       	out	0x32, r1	; 50
 56c:	42 c0       	rjmp	.+132    	; 0x5f2 <__vector_2+0xd4>
			} else { // voltage drop, stop time measurement
			up = 0;
 56e:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <up>
			//avg = (timercounter*255+TCNT0)/466;
			avg = TCNT0 + (255 * timercounter);
 572:	22 b7       	in	r18, 0x32	; 50
 574:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <timercounter>
 578:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <timercounter+0x1>
 57c:	3f ef       	ldi	r19, 0xFF	; 255
 57e:	34 9f       	mul	r19, r20
 580:	c0 01       	movw	r24, r0
 582:	35 9f       	mul	r19, r21
 584:	90 0d       	add	r25, r0
 586:	11 24       	eor	r1, r1
 588:	82 0f       	add	r24, r18
 58a:	91 1d       	adc	r25, r1
 58c:	a0 e0       	ldi	r26, 0x00	; 0
 58e:	b0 e0       	ldi	r27, 0x00	; 0
 590:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <avg>
 594:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <avg+0x1>
 598:	a0 93 73 00 	sts	0x0073, r26	; 0x800073 <avg+0x2>
 59c:	b0 93 74 00 	sts	0x0074, r27	; 0x800074 <avg+0x3>
			avg = (u64)((34300 * (avg/2))/16000000);
 5a0:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <avg>
 5a4:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <avg+0x1>
 5a8:	a0 91 73 00 	lds	r26, 0x0073	; 0x800073 <avg+0x2>
 5ac:	b0 91 74 00 	lds	r27, 0x0074	; 0x800074 <avg+0x3>
 5b0:	bb 23       	and	r27, r27
 5b2:	1c f4       	brge	.+6      	; 0x5ba <__vector_2+0x9c>
 5b4:	01 96       	adiw	r24, 0x01	; 1
 5b6:	a1 1d       	adc	r26, r1
 5b8:	b1 1d       	adc	r27, r1
 5ba:	9c 01       	movw	r18, r24
 5bc:	ad 01       	movw	r20, r26
 5be:	55 95       	asr	r21
 5c0:	47 95       	ror	r20
 5c2:	37 95       	ror	r19
 5c4:	27 95       	ror	r18
 5c6:	ac ef       	ldi	r26, 0xFC	; 252
 5c8:	b5 e8       	ldi	r27, 0x85	; 133
 5ca:	0e 94 56 04 	call	0x8ac	; 0x8ac <__muluhisi3>
 5ce:	20 e0       	ldi	r18, 0x00	; 0
 5d0:	34 e2       	ldi	r19, 0x24	; 36
 5d2:	44 ef       	ldi	r20, 0xF4	; 244
 5d4:	50 e0       	ldi	r21, 0x00	; 0
 5d6:	0e 94 37 04 	call	0x86e	; 0x86e <__divmodsi4>
 5da:	20 93 71 00 	sts	0x0071, r18	; 0x800071 <avg>
 5de:	30 93 72 00 	sts	0x0072, r19	; 0x800072 <avg+0x1>
 5e2:	40 93 73 00 	sts	0x0073, r20	; 0x800073 <avg+0x2>
 5e6:	50 93 74 00 	sts	0x0074, r21	; 0x800074 <avg+0x3>
			running = 0;
 5ea:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <running+0x1>
 5ee:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <running>
		}
	}

}
 5f2:	ff 91       	pop	r31
 5f4:	ef 91       	pop	r30
 5f6:	bf 91       	pop	r27
 5f8:	af 91       	pop	r26
 5fa:	9f 91       	pop	r25
 5fc:	8f 91       	pop	r24
 5fe:	7f 91       	pop	r23
 600:	6f 91       	pop	r22
 602:	5f 91       	pop	r21
 604:	4f 91       	pop	r20
 606:	3f 91       	pop	r19
 608:	2f 91       	pop	r18
 60a:	0f 90       	pop	r0
 60c:	0f be       	out	0x3f, r0	; 63
 60e:	0f 90       	pop	r0
 610:	1f 90       	pop	r1
 612:	18 95       	reti

00000614 <__vector_11>:

ISR(TIMER0_OVF_vect){
 614:	1f 92       	push	r1
 616:	0f 92       	push	r0
 618:	0f b6       	in	r0, 0x3f	; 63
 61a:	0f 92       	push	r0
 61c:	11 24       	eor	r1, r1
 61e:	8f 93       	push	r24
 620:	9f 93       	push	r25
	 if (up) {
 622:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <up>
 626:	88 23       	and	r24, r24
 628:	49 f0       	breq	.+18     	; 0x63c <__vector_11+0x28>
		 timercounter++;
 62a:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <timercounter>
 62e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <timercounter+0x1>
 632:	01 96       	adiw	r24, 0x01	; 1
 634:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <timercounter+0x1>
 638:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <timercounter>
	    }
}
 63c:	9f 91       	pop	r25
 63e:	8f 91       	pop	r24
 640:	0f 90       	pop	r0
 642:	0f be       	out	0x3f, r0	; 63
 644:	0f 90       	pop	r0
 646:	1f 90       	pop	r1
 648:	18 95       	reti

0000064a <ReturnDistance>:
long ReturnDistance()
{
	return avg; 
 64a:	60 91 71 00 	lds	r22, 0x0071	; 0x800071 <avg>
 64e:	70 91 72 00 	lds	r23, 0x0072	; 0x800072 <avg+0x1>
 652:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <avg+0x2>
 656:	90 91 74 00 	lds	r25, 0x0074	; 0x800074 <avg+0x3>
}
 65a:	08 95       	ret

0000065c <CarMovingForward>:

void CarMovingForward()
{
	DIO_voidSetPortDirection(PORT_B, OUTPUT); 
 65c:	61 e0       	ldi	r22, 0x01	; 1
 65e:	81 e0       	ldi	r24, 0x01	; 1
 660:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
	DIO_voidSetPinValue(PORT_B, PIN0,HIGH); // ENA
 664:	41 e0       	ldi	r20, 0x01	; 1
 666:	60 e0       	ldi	r22, 0x00	; 0
 668:	81 e0       	ldi	r24, 0x01	; 1
 66a:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_B, PIN1,HIGH); // Input 1
 66e:	41 e0       	ldi	r20, 0x01	; 1
 670:	61 e0       	ldi	r22, 0x01	; 1
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_B, PIN2,LOW); // Input 2
 678:	40 e0       	ldi	r20, 0x00	; 0
 67a:	62 e0       	ldi	r22, 0x02	; 2
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_B, PIN3,HIGH); // Input 3
 682:	41 e0       	ldi	r20, 0x01	; 1
 684:	63 e0       	ldi	r22, 0x03	; 3
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_B, PIN4,LOW); // Input 4
 68c:	40 e0       	ldi	r20, 0x00	; 0
 68e:	64 e0       	ldi	r22, 0x04	; 4
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_B, PIN5,HIGH); // ENB 
 696:	41 e0       	ldi	r20, 0x01	; 1
 698:	65 e0       	ldi	r22, 0x05	; 5
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	
	DIO_voidSetPortDirection(PORT_C, OUTPUT); 
 6a0:	61 e0       	ldi	r22, 0x01	; 1
 6a2:	82 e0       	ldi	r24, 0x02	; 2
 6a4:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
	DIO_voidSetPinValue(PORT_C, PIN0,HIGH); // ENA2
 6a8:	41 e0       	ldi	r20, 0x01	; 1
 6aa:	60 e0       	ldi	r22, 0x00	; 0
 6ac:	82 e0       	ldi	r24, 0x02	; 2
 6ae:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN1,HIGH); // Input 1
 6b2:	41 e0       	ldi	r20, 0x01	; 1
 6b4:	61 e0       	ldi	r22, 0x01	; 1
 6b6:	82 e0       	ldi	r24, 0x02	; 2
 6b8:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN2,LOW); // Input 2
 6bc:	40 e0       	ldi	r20, 0x00	; 0
 6be:	62 e0       	ldi	r22, 0x02	; 2
 6c0:	82 e0       	ldi	r24, 0x02	; 2
 6c2:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN3,HIGH); // Input 3
 6c6:	41 e0       	ldi	r20, 0x01	; 1
 6c8:	63 e0       	ldi	r22, 0x03	; 3
 6ca:	82 e0       	ldi	r24, 0x02	; 2
 6cc:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN4,LOW); // Input 4
 6d0:	40 e0       	ldi	r20, 0x00	; 0
 6d2:	64 e0       	ldi	r22, 0x04	; 4
 6d4:	82 e0       	ldi	r24, 0x02	; 2
 6d6:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN5,HIGH); // ENB2
 6da:	41 e0       	ldi	r20, 0x01	; 1
 6dc:	65 e0       	ldi	r22, 0x05	; 5
 6de:	82 e0       	ldi	r24, 0x02	; 2
 6e0:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 6e4:	08 95       	ret

000006e6 <TurnLeft>:

void TurnLeft()
{
	// Disable Left Motors for the car to turn left
	
	DIO_voidSetPortDirection(PORT_B, OUTPUT); 
 6e6:	61 e0       	ldi	r22, 0x01	; 1
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
	DIO_voidSetPinValue(PORT_B, PIN0,LOW); // ENA
 6ee:	40 e0       	ldi	r20, 0x00	; 0
 6f0:	60 e0       	ldi	r22, 0x00	; 0
 6f2:	81 e0       	ldi	r24, 0x01	; 1
 6f4:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_B, PIN5,LOW); // ENB
 6f8:	40 e0       	ldi	r20, 0x00	; 0
 6fa:	65 e0       	ldi	r22, 0x05	; 5
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		
	DIO_voidSetPortDirection(PORT_C, OUTPUT); 
 702:	61 e0       	ldi	r22, 0x01	; 1
 704:	82 e0       	ldi	r24, 0x02	; 2
 706:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
	DIO_voidSetPinValue(PORT_C, PIN0,HIGH); // ENA2
 70a:	41 e0       	ldi	r20, 0x01	; 1
 70c:	60 e0       	ldi	r22, 0x00	; 0
 70e:	82 e0       	ldi	r24, 0x02	; 2
 710:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN1,HIGH); // Input 1
 714:	41 e0       	ldi	r20, 0x01	; 1
 716:	61 e0       	ldi	r22, 0x01	; 1
 718:	82 e0       	ldi	r24, 0x02	; 2
 71a:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN2,LOW); // Input 2
 71e:	40 e0       	ldi	r20, 0x00	; 0
 720:	62 e0       	ldi	r22, 0x02	; 2
 722:	82 e0       	ldi	r24, 0x02	; 2
 724:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN3,HIGH); // Input 3
 728:	41 e0       	ldi	r20, 0x01	; 1
 72a:	63 e0       	ldi	r22, 0x03	; 3
 72c:	82 e0       	ldi	r24, 0x02	; 2
 72e:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN4,LOW); // Input 4
 732:	40 e0       	ldi	r20, 0x00	; 0
 734:	64 e0       	ldi	r22, 0x04	; 4
 736:	82 e0       	ldi	r24, 0x02	; 2
 738:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C, PIN5,HIGH); // ENB2
 73c:	41 e0       	ldi	r20, 0x01	; 1
 73e:	65 e0       	ldi	r22, 0x05	; 5
 740:	82 e0       	ldi	r24, 0x02	; 2
 742:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 746:	08 95       	ret

00000748 <TurnRight>:
}

void TurnRight()
{
		DIO_voidSetPortDirection(PORT_B, OUTPUT); 
 748:	61 e0       	ldi	r22, 0x01	; 1
 74a:	81 e0       	ldi	r24, 0x01	; 1
 74c:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
		DIO_voidSetPinValue(PORT_B, PIN0,HIGH); // ENA
 750:	41 e0       	ldi	r20, 0x01	; 1
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	81 e0       	ldi	r24, 0x01	; 1
 756:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN1,HIGH); // Input 1
 75a:	41 e0       	ldi	r20, 0x01	; 1
 75c:	61 e0       	ldi	r22, 0x01	; 1
 75e:	81 e0       	ldi	r24, 0x01	; 1
 760:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN2,LOW); // Input 2
 764:	40 e0       	ldi	r20, 0x00	; 0
 766:	62 e0       	ldi	r22, 0x02	; 2
 768:	81 e0       	ldi	r24, 0x01	; 1
 76a:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN3,HIGH); // Input 3
 76e:	41 e0       	ldi	r20, 0x01	; 1
 770:	63 e0       	ldi	r22, 0x03	; 3
 772:	81 e0       	ldi	r24, 0x01	; 1
 774:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN4,LOW); // Input 4
 778:	40 e0       	ldi	r20, 0x00	; 0
 77a:	64 e0       	ldi	r22, 0x04	; 4
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN5,HIGH); // ENB
 782:	41 e0       	ldi	r20, 0x01	; 1
 784:	65 e0       	ldi	r22, 0x05	; 5
 786:	81 e0       	ldi	r24, 0x01	; 1
 788:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		
		// Disable Right Motors for the car to turn Right
		
		DIO_voidSetPortDirection(PORT_C, OUTPUT); 
 78c:	61 e0       	ldi	r22, 0x01	; 1
 78e:	82 e0       	ldi	r24, 0x02	; 2
 790:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
		DIO_voidSetPinValue(PORT_C, PIN0,LOW); // ENA2
 794:	40 e0       	ldi	r20, 0x00	; 0
 796:	60 e0       	ldi	r22, 0x00	; 0
 798:	82 e0       	ldi	r24, 0x02	; 2
 79a:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN5,LOW); // ENB2
 79e:	40 e0       	ldi	r20, 0x00	; 0
 7a0:	65 e0       	ldi	r22, 0x05	; 5
 7a2:	82 e0       	ldi	r24, 0x02	; 2
 7a4:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 7a8:	08 95       	ret

000007aa <StopCar>:
}

void StopCar() 
{
		DIO_voidSetPortDirection(PORT_B, OUTPUT); 
 7aa:	61 e0       	ldi	r22, 0x01	; 1
 7ac:	81 e0       	ldi	r24, 0x01	; 1
 7ae:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
		DIO_voidSetPinValue(PORT_B, PIN0,LOW); // ENA
 7b2:	40 e0       	ldi	r20, 0x00	; 0
 7b4:	60 e0       	ldi	r22, 0x00	; 0
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN5,LOW); // ENB
 7bc:	40 e0       	ldi	r20, 0x00	; 0
 7be:	65 e0       	ldi	r22, 0x05	; 5
 7c0:	81 e0       	ldi	r24, 0x01	; 1
 7c2:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
	
		DIO_voidSetPortDirection(PORT_C, OUTPUT); 
 7c6:	61 e0       	ldi	r22, 0x01	; 1
 7c8:	82 e0       	ldi	r24, 0x02	; 2
 7ca:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
		DIO_voidSetPinValue(PORT_C, PIN0,LOW); // ENA2
 7ce:	40 e0       	ldi	r20, 0x00	; 0
 7d0:	60 e0       	ldi	r22, 0x00	; 0
 7d2:	82 e0       	ldi	r24, 0x02	; 2
 7d4:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN5,LOW); // ENB2
 7d8:	40 e0       	ldi	r20, 0x00	; 0
 7da:	65 e0       	ldi	r22, 0x05	; 5
 7dc:	82 e0       	ldi	r24, 0x02	; 2
 7de:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 7e2:	08 95       	ret

000007e4 <CarMovingBackward>:
}

void CarMovingBackward()
{
		DIO_voidSetPortDirection(PORT_B, OUTPUT);
 7e4:	61 e0       	ldi	r22, 0x01	; 1
 7e6:	81 e0       	ldi	r24, 0x01	; 1
 7e8:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
		DIO_voidSetPinValue(PORT_B, PIN0,HIGH); // ENA
 7ec:	41 e0       	ldi	r20, 0x01	; 1
 7ee:	60 e0       	ldi	r22, 0x00	; 0
 7f0:	81 e0       	ldi	r24, 0x01	; 1
 7f2:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN1,LOW); // Input 1
 7f6:	40 e0       	ldi	r20, 0x00	; 0
 7f8:	61 e0       	ldi	r22, 0x01	; 1
 7fa:	81 e0       	ldi	r24, 0x01	; 1
 7fc:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN2,HIGH); // Input 2
 800:	41 e0       	ldi	r20, 0x01	; 1
 802:	62 e0       	ldi	r22, 0x02	; 2
 804:	81 e0       	ldi	r24, 0x01	; 1
 806:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN3,LOW); // Input 3
 80a:	40 e0       	ldi	r20, 0x00	; 0
 80c:	63 e0       	ldi	r22, 0x03	; 3
 80e:	81 e0       	ldi	r24, 0x01	; 1
 810:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN4,HIGH); // Input 4
 814:	41 e0       	ldi	r20, 0x01	; 1
 816:	64 e0       	ldi	r22, 0x04	; 4
 818:	81 e0       	ldi	r24, 0x01	; 1
 81a:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_B, PIN5,HIGH); // ENB
 81e:	41 e0       	ldi	r20, 0x01	; 1
 820:	65 e0       	ldi	r22, 0x05	; 5
 822:	81 e0       	ldi	r24, 0x01	; 1
 824:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		
		DIO_voidSetPortDirection(PORT_C, OUTPUT);
 828:	61 e0       	ldi	r22, 0x01	; 1
 82a:	82 e0       	ldi	r24, 0x02	; 2
 82c:	0e 94 2a 01 	call	0x254	; 0x254 <DIO_voidSetPortDirection>
		DIO_voidSetPinValue(PORT_C, PIN0,HIGH); // ENA2
 830:	41 e0       	ldi	r20, 0x01	; 1
 832:	60 e0       	ldi	r22, 0x00	; 0
 834:	82 e0       	ldi	r24, 0x02	; 2
 836:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN1,LOW); // Input 1
 83a:	40 e0       	ldi	r20, 0x00	; 0
 83c:	61 e0       	ldi	r22, 0x01	; 1
 83e:	82 e0       	ldi	r24, 0x02	; 2
 840:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN2,HIGH); // Input 2
 844:	41 e0       	ldi	r20, 0x01	; 1
 846:	62 e0       	ldi	r22, 0x02	; 2
 848:	82 e0       	ldi	r24, 0x02	; 2
 84a:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN3,LOW); // Input 3
 84e:	40 e0       	ldi	r20, 0x00	; 0
 850:	63 e0       	ldi	r22, 0x03	; 3
 852:	82 e0       	ldi	r24, 0x02	; 2
 854:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN4,HIGH); // Input 4
 858:	41 e0       	ldi	r20, 0x01	; 1
 85a:	64 e0       	ldi	r22, 0x04	; 4
 85c:	82 e0       	ldi	r24, 0x02	; 2
 85e:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C, PIN5,HIGH); // ENB2
 862:	41 e0       	ldi	r20, 0x01	; 1
 864:	65 e0       	ldi	r22, 0x05	; 5
 866:	82 e0       	ldi	r24, 0x02	; 2
 868:	0e 94 b4 00 	call	0x168	; 0x168 <DIO_voidSetPinValue>
 86c:	08 95       	ret

0000086e <__divmodsi4>:
 86e:	05 2e       	mov	r0, r21
 870:	97 fb       	bst	r25, 7
 872:	1e f4       	brtc	.+6      	; 0x87a <__divmodsi4+0xc>
 874:	00 94       	com	r0
 876:	0e 94 4e 04 	call	0x89c	; 0x89c <__negsi2>
 87a:	57 fd       	sbrc	r21, 7
 87c:	07 d0       	rcall	.+14     	; 0x88c <__divmodsi4_neg2>
 87e:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__udivmodsi4>
 882:	07 fc       	sbrc	r0, 7
 884:	03 d0       	rcall	.+6      	; 0x88c <__divmodsi4_neg2>
 886:	4e f4       	brtc	.+18     	; 0x89a <__divmodsi4_exit>
 888:	0c 94 4e 04 	jmp	0x89c	; 0x89c <__negsi2>

0000088c <__divmodsi4_neg2>:
 88c:	50 95       	com	r21
 88e:	40 95       	com	r20
 890:	30 95       	com	r19
 892:	21 95       	neg	r18
 894:	3f 4f       	sbci	r19, 0xFF	; 255
 896:	4f 4f       	sbci	r20, 0xFF	; 255
 898:	5f 4f       	sbci	r21, 0xFF	; 255

0000089a <__divmodsi4_exit>:
 89a:	08 95       	ret

0000089c <__negsi2>:
 89c:	90 95       	com	r25
 89e:	80 95       	com	r24
 8a0:	70 95       	com	r23
 8a2:	61 95       	neg	r22
 8a4:	7f 4f       	sbci	r23, 0xFF	; 255
 8a6:	8f 4f       	sbci	r24, 0xFF	; 255
 8a8:	9f 4f       	sbci	r25, 0xFF	; 255
 8aa:	08 95       	ret

000008ac <__muluhisi3>:
 8ac:	0e 94 83 04 	call	0x906	; 0x906 <__umulhisi3>
 8b0:	a5 9f       	mul	r26, r21
 8b2:	90 0d       	add	r25, r0
 8b4:	b4 9f       	mul	r27, r20
 8b6:	90 0d       	add	r25, r0
 8b8:	a4 9f       	mul	r26, r20
 8ba:	80 0d       	add	r24, r0
 8bc:	91 1d       	adc	r25, r1
 8be:	11 24       	eor	r1, r1
 8c0:	08 95       	ret

000008c2 <__udivmodsi4>:
 8c2:	a1 e2       	ldi	r26, 0x21	; 33
 8c4:	1a 2e       	mov	r1, r26
 8c6:	aa 1b       	sub	r26, r26
 8c8:	bb 1b       	sub	r27, r27
 8ca:	fd 01       	movw	r30, r26
 8cc:	0d c0       	rjmp	.+26     	; 0x8e8 <__udivmodsi4_ep>

000008ce <__udivmodsi4_loop>:
 8ce:	aa 1f       	adc	r26, r26
 8d0:	bb 1f       	adc	r27, r27
 8d2:	ee 1f       	adc	r30, r30
 8d4:	ff 1f       	adc	r31, r31
 8d6:	a2 17       	cp	r26, r18
 8d8:	b3 07       	cpc	r27, r19
 8da:	e4 07       	cpc	r30, r20
 8dc:	f5 07       	cpc	r31, r21
 8de:	20 f0       	brcs	.+8      	; 0x8e8 <__udivmodsi4_ep>
 8e0:	a2 1b       	sub	r26, r18
 8e2:	b3 0b       	sbc	r27, r19
 8e4:	e4 0b       	sbc	r30, r20
 8e6:	f5 0b       	sbc	r31, r21

000008e8 <__udivmodsi4_ep>:
 8e8:	66 1f       	adc	r22, r22
 8ea:	77 1f       	adc	r23, r23
 8ec:	88 1f       	adc	r24, r24
 8ee:	99 1f       	adc	r25, r25
 8f0:	1a 94       	dec	r1
 8f2:	69 f7       	brne	.-38     	; 0x8ce <__udivmodsi4_loop>
 8f4:	60 95       	com	r22
 8f6:	70 95       	com	r23
 8f8:	80 95       	com	r24
 8fa:	90 95       	com	r25
 8fc:	9b 01       	movw	r18, r22
 8fe:	ac 01       	movw	r20, r24
 900:	bd 01       	movw	r22, r26
 902:	cf 01       	movw	r24, r30
 904:	08 95       	ret

00000906 <__umulhisi3>:
 906:	a2 9f       	mul	r26, r18
 908:	b0 01       	movw	r22, r0
 90a:	b3 9f       	mul	r27, r19
 90c:	c0 01       	movw	r24, r0
 90e:	a3 9f       	mul	r26, r19
 910:	70 0d       	add	r23, r0
 912:	81 1d       	adc	r24, r1
 914:	11 24       	eor	r1, r1
 916:	91 1d       	adc	r25, r1
 918:	b2 9f       	mul	r27, r18
 91a:	70 0d       	add	r23, r0
 91c:	81 1d       	adc	r24, r1
 91e:	11 24       	eor	r1, r1
 920:	91 1d       	adc	r25, r1
 922:	08 95       	ret

00000924 <_exit>:
 924:	f8 94       	cli

00000926 <__stop_program>:
 926:	ff cf       	rjmp	.-2      	; 0x926 <__stop_program>
